# Sources:
# http://www.robo47.net/blog/208-Git-Aliases-Submodules-and-Symfony
# http://nerderati.com/2010/07/making-git-behave/

[user]
    name = Sebastian Tramp
    email = sebastian.tramp@eccenca.com
    ; signingkey = 2ED13866
    signingkey = 2ED13866

[alias]
## shortcuts
    release  = release
    eccinit  = eccinit
    a        = add
    aa       = add .           # add all
    au       = add --update :/ # add all modified files which are already tracked
    b        = branch
    ba       = branch -a
    c        = commit -S
    cp       = commit
    cl       = clone
    cr       = clone --recursive
    co       = checkout
    ci       = checkout-index
    coi      = checkout-index
    ce       = config --edit
    ceg      = config --edit --global
    desc     = describe --always --dirty
    d        = diff --submodule=diff --word-diff
    dt       = difftool
    dc       = diff --cached --word-diff
    dtc      = difftool --cached
    ds       = diff --staged --word-diff
    dts      = difftool --staged
    f        = fetch --prune --all
    ff       = "!git f && git smf" # fetch current and all subdirectories
    m        = multi
    p        = "!git pull --rebase --autostash --all --verbose --no-recurse-submodules && git smiu"
    openconflict = "!vim +/'<<<<<<<' $( git diff --name-only --diff-filter=U | xargs )" # open vim with conflict
    s        = status -sb
    st       = status
    staged   = diff --cached        # what is already in the index
    t        = tag
    unchange = checkout-index -a -f # drop changes but keep the index / staged changes
    unstage  = reset HEAD           # unadd everything / drop index but keep changes
    unstash  = stash pop
    # jump command shortcuts
    jm       = jump merge
    jd       = jump diff
    jdc      = jump diff --cached
    jg       = jump grep -Ri

## log stuff
    l           = "!git --no-pager log -1 --format=format:\"$path: %Cgreen%s%Creset (%Cred$(git rev-parse --abbrev-ref HEAD)%Creset/%ar)\"; echo "
    x           = log -10 --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'
    xlog        = log -10 --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'
    xlogall     = log -10 --branches --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'
    xlogfull    = log --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'
    xlogfullall = log --branches --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'
    glog        = log --oneline --decorate --stat --graph
    tree        = log --decorate --pretty=oneline --abbrev-commit --graph
    lc          = log ORIG_HEAD.. --stat --no-merges --graph

## investigating
    # from phil: show jenkins notes
    jenkins=notes --ref jenkins show
    # meld diff between branches and much more
    # git://github.com/wmanley/git-meld.git
    meld="!~/.local/bin/git-meld.pl"
    # shows ignored directories
    ignored   = "!git ls-files --others -i --exclude-standard --directory"
    # show users which have commits in current branch
    userlist  = "!git log --format='%aN' | sort -u"
    # same as userlist but with commit count
    usercount = "!git log --format='%aN <%aE>'  | awk '{arr[$0]++} END{for (i in arr){print arr[i], i;}}' | sort -nr"
    # equivalent to hg out (somehow)
    # http://stackoverflow.com/questions/1450348/
    remote-branch = "!echo $(git config branch.$(git rev-parse --abbrev-ref HEAD).remote)/$(git config branch.$(git rev-parse --abbrev-ref HEAD).merge | cut -d "/" -f 3-)"
    out = "!git --no-pager log $(git remote-branch)..HEAD --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'; echo ''"
    in = "!git --no-pager log HEAD..$(git remote-branch) --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by %an)%Creset'"

    # should be some day similar to "hg info"
    info = remote show origin

## submodule stuff
    sm = submodule
    # submodule foreach - shortcut when running something on all submodules
    # r = recursive, q = quiet
    smfe   = submodule foreach
    smfeq  = submodule foreach --quiet
    smfer  = submodule foreach --recursive
    smferq = submodule foreach --recursive --quiet
    # submodule last message
    # --format=format:'%Cgreen%h%Creset %Cred%d%Creset %s %Cblue(%ar by
    # %an)%Creset)
    sml  = "!git l; git --paginate smferq 'git --no-pager log -1 --format=format:\"$path: %Cgreen%s%Creset (%Cred$(git rev-parse --abbrev-ref HEAD)%Creset/%ar)\"; echo '"
    # submodule branches
    smb   = "!git smfeq  'echo \"$(git rev-parse --abbrev-ref HEAD) -> $path\"'"
    smbr  = "!git smferq 'echo \"$(git rev-parse --abbrev-ref HEAD) -> $path\"'"
    smiu  = "submodule update --init --recursive"
    # submodule status
    sms   = "!git smferq git status --porcelain"
    smst  = "!git smferq git status"
    # submodule update
    smp   = "!git smfer 'git --no-pager pull || echo failed' "
    smf   = "!git smfer git --no-pager fetch --prune --all"

# merging
    m-noff = merge --no-ff    # no fast forward merge
    m-ff   = merge --ff-only  #    fast formard merge
    addTo  = "!/home/seebi/bin/scripts/gitAddFile.sh $1 $2"

# other stuff
    clean-all = clean -dfq

[color]
    diff        = always
    status      = always
    branch      = always
    interactive = always
	ui = true
    pager       = true

[color "branch"]
    current = yellow reverse
    local   = yellow
    remote  = green

[color "status"]
    added     = yellow
    changed   = green
    untracked = cyan

[core]
	pager = diff-so-fancy | less --tabs=4 -RFX
    whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = /Users/seebi/.gitignore_global

# git flow default configuration
[gitflow "branch"]
    master = master
    develop = develop
[gitflow "prefix"]
    feature = feature/
    release = release/
    hotfix = hotfix/
    support = support/
    versiontag = v

[diff]
    #external = ~/.local/scripts/gitOpendiff.sh
    tool = Kaleidoscope

#http://stackoverflow.com/questions/8156493/git-vimdiff-and-dirdiff
[difftool "default-difftool"]
    cmd = vim -f '+next' '+execute \"DirDiff\" argv(0) argv(1)' $LOCAL $REMOTE

[difftool]
    prompt = false

[merge]
    tool = Kaleidoscope

[interactive]
    singlekey = true
[github]
    user = seebi
[web]
    browser = chromium
[rerere]
    enabled = 1

[tag]
    sort = version:refname
[versionsort]
    prereleaseSuffix = -pre
    prereleaseSuffix = -rc
    prereleaseSuffix = -RC1

#[remote "origin"]
    #fetch = +refs/notes/*:refs/notes/*

[push]
    default = simple
[remote-hg]
    hg-git-compat = true
[mergetool]
    keepBackup = true
    prompt = false
[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustExitCode = true

[difftool "quitdiff-eccrev"]
    cmd = /Users/seebi/.local/QuitDiff/quitdiff --diffFormat eccrev --local=\"$LOCAL\" --remote=\"$REMOTE\" --merged=\"$MERGES\" --base=\"$BASE\"

[difftool "quitdiff"]
        cmd = /Users/seebi/.local/QuitDiff/quitdiff --local=\"$LOCAL\" --remote=\"$REMOTE\" --merged=\"$MERGES\" --base=\"$BASE\"

[difftool "quitdiff-sparql"]
        cmd = /Users/seebi/.local/QuitDiff/quitdiff --diffFormat sparql --local=\"$LOCAL\" --remote=\"$REMOTE\" --merged=\"$MERGES\" --base=\"$BASE\"


[lfs]
    url = https://artifactory.eccenca.com/api/lfs/download-eccenca-com
    access = basic

[lfs "https://artifactory.eccenca.com/api/lfs/download-eccenca-com"]
    access = basic

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    required = true
	process = git-lfs filter-process
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[release]
	auto-push = true
	auto-publish = false
	quiet = false

[submodule]
	fetchJobs = 4
